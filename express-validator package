import { check } from "express-validator";

export const registerValidator=[
    check("name").not().isEmpty().withMessage("Name is required"),
    check("email",'please include a valid email').isEmail().normalizeEmail({
        gmail_remove_dots:true
    }),
    check("mobile",'Mobile no should contain 10 digits').isLength({
        min:10,
        max:10
    }),
    check("password").isLength({min:8}).withMessage("Password must be at least 8 characters and atleast one uppercase letter , one lowercase letter , and one number and a special character").isStrongPassword({
        minLength:8,
        minUppercase:1,
        minLowercase:1,
        minNumbers:1,
        minSymbols:1
    }),
    check("image",'Mobile no should contain 10 digits').custom((value,{req})=>{
        if(req.file.mimetype==='image/jpeg'|| req.file.mimetype==='image/png'){
            return true;
        }else{
            return false;
        }
    }).withMessage("Please upload an image jpeg,png")

]
//use this in the register route as middleware
//in the controller before every thing  use 
  const errors= validationResult(req)
       if(!errors.isEmpty()){
        return res.status(400).json({msg:"Invalid input",errors:errors.array()})

       }

       note : validaateresult should be imported             : import { validationResult } from "express-validator"
