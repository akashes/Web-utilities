//RESTAURANTSLICE-------------------------------------------------------------------------------------
import { createSlice,createAsyncThunk } from "@reduxjs/toolkit";
import axios from "axios";


//asynchronous thunk
export const fetchRestaurants= createAsyncThunk('restaurantList/fetchRestaurants',()=>{
    //api call
    return axios.get('https://restaurant-backend-wcrj.onrender.com/restaurants').then((res)=>{
        console.log(res);
        return res.data
    }).catch((err)=>{
        console.log(err);
    })
})




const restaurantSlice = createSlice({
    name:"restaurantList",
    initialState:{
        loading:false,
        allRestaurants:[],
        error:''
       
    },
    extraReducers:(builder)=>{
        builder.addCase(fetchRestaurants.pending,(state)=>{
            state.loading=true
        })
        builder.addCase(fetchRestaurants.fulfilled,(state,action)=>{
            state.loading = false
            state.allRestaurants= action.payload
            state.error = ''

        })
        builder.addCase(fetchRestaurants.rejected,(state,action)=>{
            state.loading = false
            state.allRestaurants=[]
            state.error = action.error.message
        })
    }
  
})

export default restaurantSlice.reducer

STORE-----------------------------------------------------------------------------------------
import {configureStore} from '@reduxjs/toolkit'
import restaurantReducer from './restaurantSlice'

const store = configureStore({
    reducer:{
        restaurant:restaurantReducer


    }
})

export default store

COMPONENT---------------------------------------------------------------------------------------
import React, { useEffect, useState } from 'react'
import axios from 'axios'
import {Row,Col} from 'react-bootstrap'
import RestCard from './RestCard'
import {useDispatch, useSelector} from 'react-redux'
import { fetchRestaurants } from '../Redux/restaurantSlice'



function AllRest() {
  const allRestaurants = useSelector((state)=>state.restaurant.allRestaurants)
  const dispatch = useDispatch()
  console.log(allRestaurants);
  //to hold restaurant details
  const [allRestData,setAllRestData]=useState([])

  const baseUrl='https://restaurant-backend-wcrj.onrender.com/restaurants'

//API fetching
  const fetchData=async()=>{
    // const result = await axios.get(baseUrl)
    // setAllRestData(result.data)

  }
  console.log(allRestData);
  
  useEffect(()=>{
  
  
    dispatch(fetchRestaurants())
  },[])
   
  return (
    <div style={{marginBottom:'200px'}}>
      <Row className='ps-4'>
        {
          allRestaurants?.length>0&&
          allRestaurants?.map((ele)=>{
            return(
              <Col sm={12} md={6} lg={4} xl={3}>
              <RestCard id={ele.id} image={ele.photograph} name={ele.name} cusine={ele.cuisine_type} address={ele.address}/>
              </Col>
            )
          })
        }

      </Row>
     
    </div>
  )
}

export default AllRest

