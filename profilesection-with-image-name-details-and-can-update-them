import React, { useState,useEffect } from 'react'
import '../styles/MyProfile.css'
import image1  from '../assets/userLogo.png'
import { getParticularUserDetails, updateUserDetails, updateUserProfileImage } from '../services/allAPI'
import { baseUrl } from '../services/baseUrl'
import axios from 'axios'
function MyProfile() {
  const[github,setGithub]=useState("")
  const[linkedin,setLinkedin]=useState("")
  const[username,setUsername] = useState("")
  const[image,setImage]=useState({})
  const[preview,setPreview]=useState("")
  const[profileImg,setProfileImg]=useState("")

 

  const setImageForUpload = (e) => {
    e.preventDefault();

    const file = e.target.files[0];
    if (file) {
        setImage(file);
        setPreview(URL.createObjectURL(file));
    }
};



  const handleUpdateUserDetails=async(e)=>{
    e.preventDefault()
    if(!github || !linkedin || !image) {
      alert('please enter details')
    }else{
      const token = sessionStorage.getItem("token")
      if(token){
        console.log('token inside is ',token);
        const reqHeader={
          "Content-Type":"multipart/form-data",
          "Authorization":`Bearer ${token}`
        }
        const reqBody = new FormData
        reqBody.append('github',github)
        reqBody.append('link',linkedin)
        reqBody.append('username',username)
        reqBody.append('profile',image)
        console.log('reqbody is ',reqBody);
        const result = await updateUserDetails(reqBody,reqHeader)
        console.log(result);
     
        
  
  
  
      }

    }
   
  }



  useEffect(()=>{

  const token = sessionStorage.getItem('token')
  if(token){
    const reqBody={}
    const reqHeader={
      "Content-Type":"multipart/form-data",
      "Authorization":`Bearer ${token}`

    }
    getParticularUserDetails(reqBody,reqHeader).then((res)=>{
      console.log(res.data);
    const{github,link,profile,username}=res.data
    console.log(github,link,profile,username);
    setUsername(username)
    setLinkedin(link)
    setGithub(github)
    setProfileImg(profile)
 




    })
    

  }

  
   },[])
  return (
    <div className='text-center'>
        <h3 >My Profile</h3>
        <label htmlFor="user">
        <input
        onChange={setImageForUpload}
          style={{display:'none',opacity:'0'}} 
        type="file" name="" id="user" />

        <img  style={{borderRadius:'50%',objectPosition:'0px'}} height={'150px'}
    src={preview ? preview : (profileImg ? `${baseUrl}/uploads/${profileImg}` : image1)}
    alt="" />

        </label>
       
        <div className='d-flex flex-column align-items-center'>
            <input value={username} onChange={(e)=>setUsername(e.target.value)}  style={{maxWidth:'300px',outline:'none',caretColor:'transparent'}} type="text" name="" className=' text-center form-control m-2' placeholder='username' id="" />
            <div className='d-flex align-items-center'>
              <input value={github}  onChange={(e)=>setGithub(e.target.value)} style={{maxWidth:'300px',outline:'none',caretColor:'transparent'}} type="text" name="" className='text-center form-control m-2' placeholder='GitHub' id="" />
              <a href={github} target='_blank'>
                <svg style={{width:'30px'}} xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-1 h-1">
                  <path stroke-linecap="round" stroke-linejoin="round" d="m12.75 15 3-3m0 0-3-3m3 3h-7.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
                </svg>
              </a>
            </div>  

            <div className="d-flex align-items-center"><input value={linkedin} onChange={(e)=>setLinkedin(e.target.value)} style={{maxWidth:'300px',outline:'none',caretColor:'transparent'}} type="text" name="" className='text-center form-control m-2' placeholder='Linkedin' id="" />
            <a href={linkedin} target='_blank'>
              <svg style={{width:'30px'}} xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-1 h-1">
                  <path stroke-linecap="round" stroke-linejoin="round" d="m12.75 15 3-3m0 0-3-3m3 3h-7.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
                </svg>
            </a>
            </div>
            <button onClick={handleUpdateUserDetails} className='btn btn-success my-2' >Update user Details</button>
        </div>
      
    </div>
  )
}

export default MyProfile

--------------------------------------------------------------------------------------------


exports.updateUserDetails=async(req,res)=>{
    
    const profile = req.file ? req.file.filename : undefined;
    
    console.log(profile);
    
    console.log('indise');
   try{
    const{github,link,username}=req.body
    console.log('reqbody is ',github,link);
console.log('inside updat user');
    const value = req.payload
    console.log('payload is ',value);

    const newUser = await users.findByIdAndUpdate({_id:value},{github,link,profile,username},{new:true})
    if(newUser){
        console.log('new user is ',newUser);
        res.status(200).json(newUser)
    }else{
        res.status(404).json('cant update user')
    }

   }catch(err){
    res.status(500).json(err.message)
   }
   
    
}

exports.getAUserDetail=async(req,res)=>{
   try{
    const userId = req.payload
    console.log('userid is ',userId);
    const user = await users.findById(userId)
    if(user){
        res.status(200).json(user)
    }else{
        res.status(401).json('cant find user')
    }
   }catch(err){
    console.log(err);
    res.status(500).json('couldnt find user')
   }
}
